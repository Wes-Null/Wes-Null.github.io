[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Wes Null’s Data Blog",
    "section": "",
    "text": "This is the page where you can find some personal data science oriented projects of mine. Some of these are focused on analyzing specific datasets, while others are more akin to learning exercises with an educational focus. Enjoy!"
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Wes Null’s Data Blog",
    "section": "",
    "text": "This is the page where you can find some personal data science oriented projects of mine. Some of these are focused on analyzing specific datasets, while others are more akin to learning exercises with an educational focus. Enjoy!"
  },
  {
    "objectID": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html",
    "href": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html",
    "title": "Exploring Musical Ecosystems in Spotify Chart Data",
    "section": "",
    "text": "Though today the world is more globalized than ever before, different regions of the world still have distinct pop music ecosystems, from K-Pop in South Korea to the wide variety of techno across the European continent. It is intuitive to assume that each country has a distinct musical palette, but how exactly do the listening habits of these countries relate to one another on the macro-scale? Is it possible to outline unexpected regional trends in pop music taste by comparing the top 200 songs across countries?"
  },
  {
    "objectID": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#introduction",
    "href": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#introduction",
    "title": "Exploring Musical Ecosystems in Spotify Chart Data",
    "section": "",
    "text": "Though today the world is more globalized than ever before, different regions of the world still have distinct pop music ecosystems, from K-Pop in South Korea to the wide variety of techno across the European continent. It is intuitive to assume that each country has a distinct musical palette, but how exactly do the listening habits of these countries relate to one another on the macro-scale? Is it possible to outline unexpected regional trends in pop music taste by comparing the top 200 songs across countries?"
  },
  {
    "objectID": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#two-primary-questions",
    "href": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#two-primary-questions",
    "title": "Exploring Musical Ecosystems in Spotify Chart Data",
    "section": "Two Primary Questions",
    "text": "Two Primary Questions\n\nHow unique is a country’s top 200 chart based on how widely shared it’s songs are?\nWhat are some of the most distinct trends in the data overall, across all countries?"
  },
  {
    "objectID": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#data",
    "href": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#data",
    "title": "Exploring Musical Ecosystems in Spotify Chart Data",
    "section": "Data",
    "text": "Data\nIn this project, the top 200 songs by Spotify streams of 73 countries around the world are gathered from the week of May 29, 2025 for analysis (URL: https://charts.spotify.com/home). Two different clustering approaches are used to group each song into distinct clusters based off of their frequency across the charts of all different countries. For modeling purposes, the data was transformed into a wide matrix where each row represented a song and each column represented that song’s presence in a country’s chart, one-hot encoded with 1s an 0s."
  },
  {
    "objectID": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#question-1-measuring-chart-uniqueness",
    "href": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#question-1-measuring-chart-uniqueness",
    "title": "Exploring Musical Ecosystems in Spotify Chart Data",
    "section": "Question 1: Measuring Chart Uniqueness",
    "text": "Question 1: Measuring Chart Uniqueness\nOne potential method of measuring the uniqueness of a country’s chart involves looking at the number of other countries the songs on its chart are shared with. If we simply count the number of times that each of the songs appear in the charts of other countries and add the totals for each song together, we can use this number as a broad measurement of “globalization” of a chart.\nWe can use both raw frequency and the average number of shares per songs, which we can call “globality”, as seen in the table below.\n\n\n\n\n\n\nWe can then see which countries have the lowest and highest globality scores:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLimitations\nWhile the globality metric can be a good start for understanding the data, it suffers from significant limitations. Taking the mean of shares per song by itself tells us nothing about the shape of the distribution of the share count of a given country. Therefore, taking a blanket mean via the globality metric for shares per song leads to critical information loss. We have little insight into why these scores are what they are. A country’s chart could have a large bundle of songs that are shared with a very large amount of other countries, yet have another bundle that are completely exclusive to the country at hand.\nFor example, looking at Austria, a country with a high globality score of 12.095, we see:\n\n\n\n\n\n\n\n\n\nA strong plurality of songs in Austria’s chart are shared with only one other country. What might that other country be? Let’s look further:\n\n\n\n\n\n\n\n\n\nGermany holds a significant lead in number of shared songs with Austria. For context, here is the distribution of the number of shared songs with Austria (bin width of 5):\n\n\n\n\n\n\n\n\n\nGiven that a large proportion of countries in the data share less than 75 songs with Austria, Germany’s total of 139 is remarkable.\nNow let’s see if Germany is the country that shares the most songs exclusively with Austria:\n\n\n\n\n\n\nAs seen above, there are 35 songs in the data that are shared only by Germany and Austria. Here they are:\n\n\n\n\n\n\nKnowing that the two countries share a common language and border, as well as many historical ties, this result makes intuitive sense (notice how the majority of the titles above are in German). Yet how many less obvious trends can we uncover in the data? Digging through the data “by hand” in search of these patterns may prove to be a lengthy process. Luckily, unsupervised machine learning methods can help us outline some of the patterns buried within large data sets automatically."
  },
  {
    "objectID": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#why-hierarchical-clustering",
    "href": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#why-hierarchical-clustering",
    "title": "Exploring Musical Ecosystems in Spotify Chart Data",
    "section": "Why Hierarchical Clustering?",
    "text": "Why Hierarchical Clustering?\nFor this data set, the primary way of making sense of songs is keeping track of what countries’ top 200 charts they appear in. Therefore, data in a wide format with each row representing a unique song and a column representing the appearance of the song in a given country’s chart (denoted as 1 or 0) is most conducive to our analysis.\nFirstly, we need a way of measuring the distance between each song. The distance represents how similarly two given songs appear in the charts of specific countries. This can be done using the Jaccard distance, calculated by:\n\\[d(A, B) = 1 - \\frac{\\left|A \\cap B\\right|}{\\left|A \\cup B\\right|}\\] Where A and B represent two different songs conceived as sets of “appearances” in the charts of different countries. The matrix that represents this distance between every combination of points is central to the implementation of the hierarchical clustering algorithm.\n\nThe Process\n\nFor hierarchical clustering, each data point is initially treated as its own cluster.\nThe algorithm first searches the distance matrix for the smallest distance between 2 points. The two points are then merged into a new, single cluster.\nThe distance matrix is then updated to remove the previous two points (and their rows and columns in the matrix) and add the new row and column corresponding to the new cluster. The distances are then recorded between this new cluster and all other remaining clusters (which are still single points at this stage). There are multiple ways to calculate this distance, called linkage methods. Some of these include:\n\nComplete Linkage: measures the maximum distance between any point in one cluster to any point in another.\nSingle Linkage: similar to above but takes the minimum distance.\nAverage Linkage: Takes the average distance between all pairs of points within two clusters.\nWard’s Linkage: Determines which clusters merge based on lowest increase in the within-cluster sum of squares (WSS).\n\nThis process of clusters merging with one another continues until one cluster remains. The merging of clusters is recorded by a dendrogram, which is why the process is called “hierarchical” clustering: each level of clustering is organized into a hierarchical structure. Different methods are used to determine the optimal “cutoff” point for the number of clusters, visualized as “cutting” the dendrogram at the appropriate height. A dendrogram looks like this:\n\n\n\nAn example of a dendrogram. Each branch represents a cluster, and there are different groupings at different levels. The higher the branches merge, the greater difference between the clusters."
  },
  {
    "objectID": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#procedure",
    "href": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#procedure",
    "title": "Exploring Musical Ecosystems in Spotify Chart Data",
    "section": "Procedure",
    "text": "Procedure\n\nLinkage Method\nFor this procedure, we will be selecting the Ward linkage method, which had the highest “cophenetic correlation coefficient” (at .71) out of all the methods. Furthermore, Ward’s method tends to produce more even and compact clusters than methods like single linkage.\n\n\nSelecting Optimal Number of Clusters (K)\nSelecting the appropriate number of clusters is as much an art as it is a science - that is, there is often no one obvious answer. Selecting the appropriate k depends both on cohesive the clusters are mathematically and the interpretability of the project overall. It may very well be the case that an algorithm tells you that 100 clusters is optimal, yet this may be of little help when trying to observe more broad, easily understood categories in the data.\nFor this analysis, the silhouette method is used to check values of k from 1 to 100. The silhouette method works by taking the mean distance from a point to all other points in its cluster (a), as well as the mean distance from the point to all points in the nearest neighbor cluster (b) and then plugging them into the following formula:\n\\[\ns(i) = \\frac{b(i) - a(i)}{\\max\\{a(i), b(i)\\}}\n\\] Then, the silhouette scores are averaged per different k. A silhouette score close to 1 indicates well-defined, distinctive clusters.\nFrom a random sample of 4000 songs of the data, here is the average silhouette score from k = 1 to k = 100:\n\n\n\n\n\n\n\n\n\nHere we can see a curve that spikes high at k = 2, quickly drops down and then builds somewhat logarithmically all the way to 100 (and likely beyond). For the purpose of this analysis, 100 clusters might not be the most useful. At k = 32, we have a fairly high silhoette score while also having broad enough categories to best see general macro trends in the data. Therefore, we will proceed with 32 clusters.\n\n\nExploring the Clusters\nBelow are all 32 clusters, each with a chart of the top 15 countries that constitute that cluster.\n\nCluster 1Cluster 2Cluster 3Cluster 4Cluster 5Cluster 6Cluster 7Cluster 8Cluster 9Cluster 10Cluster 11Cluster 12Cluster 13Cluster 14Cluster 15Cluster 16Cluster 17Cluster 18Cluster 19Cluster 20Cluster 21Cluster 22Cluster 23Cluster 24Cluster 25Cluster 26Cluster 27Cluster 28Cluster 29Cluster 30Cluster 31Cluster 32\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnd here we can see which songs make up each cluster:\n\n\n\nSelect a Cluster to View:\n\n\n\n\n\n\n\n\n\n\n\nAs one might predict, much of the clusters are firmly stratified along the lines of language and geography. There are certain clusters (2, 14, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32) that are composed entirely of tracks from one country. These include:\n\nCluster 2 - Vietnam\nCluster 14 - Thailand\nCluster 20 - Romania\nCluster 21 - Poland\nCluster 22 - Philippines\nCluster 25 - Morocco\nCluster 26 - Japan\nCluster 27 - Israel\nCluster 28 - Iceland\nCluster 29 - Finland\nCluster 30 - Egypt\nCluster 31 - Denmark\nCluster 32 - Bulgaria\n\nIf we were to select a higher k, it is very likely that we would have even more homogeneous clusters."
  },
  {
    "objectID": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#calculating-the-distance-between-the-clusters",
    "href": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#calculating-the-distance-between-the-clusters",
    "title": "Exploring Musical Ecosystems in Spotify Chart Data",
    "section": "Calculating the Distance Between the Clusters",
    "text": "Calculating the Distance Between the Clusters\n\nHeatmap\nWe can use a heatmap to explore the distance between the clusters themselves. The distance is calculated using the mean of the Jaccard distances between each of the songs in the two clusters being compared at a time. Having a score of 1.00 between two clusters signify two totally different geographic footprints, while a score of 0 indicates having the exact same footprint (meaning they’re identical in the grid).\n\n\n\n\n\n\n\n\n\nIt is interesting to notice how many clusters are completely unique from one another, with a Jaccard distance of 1. Given how many clusters are composed of songs that only appear on one country’s chart, this should come as no surprise.\n\n\nUMAP Visualization\nAnother means of visualizing the clusters is through the process of UMAP (uniform manifold approximation and projection), a dimensionality reduction technique that allows for visualization of high-dimensional data while preserving both the local and global structure of the clusters. This can be seen below:\n\n\n\n\n\n\nIt’s important to point out for readers less familiar with this process that the two axes on this chart are mathematically constructed and don’t represent a single concrete variable. They can be thought of as a “composite” of many different variables that allow us to better visualize the relationships between the points in the data across a high number of dimensions.\nFurthermore, it’s important to remember that the distances between the more well-separated clusters are less meaningful than the distances between clusters closer together (such as those in the center-right region of the plot). This is due to the number of clusters that have nothing in common with each other, which means they are all technically the same “distance” from one another (as seen earlier on the heatmap)."
  },
  {
    "objectID": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#patterns-of-interest",
    "href": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#patterns-of-interest",
    "title": "Exploring Musical Ecosystems in Spotify Chart Data",
    "section": "Patterns of Interest",
    "text": "Patterns of Interest\n\nThe Latin Clusters\nIt is interesting to notice that the model separated Latin songs along noticeable geographic lines. Cluster 6 is the largest cluster, with the most prominent countries being Mexico and Colombia. Cluster 7 is a smaller but still prominent group of songs most popular in Argentina and Uruguay. Cluster 8 is overwhelmingly dominated by Brazil yet Portugal also shares many of its songs.\nCluster 6 seems to be the “flagship” Latin pop cluster, as just about every Latin country in the data shares a sizable percentage of its songs, including Argentina and Uruguay. Yet it is remarkable that the model still separated a large cluster of songs that were almost exclusive to these two South American countries. Culturally, this makes sense - these two countries stand out in Latin America for having a unique rock music scene.\n\n\nIndia and Pakistan (and Canada?)\nAnother interesting tidbit can be found in Cluster 23, which is representative of music from both India and Pakistan. However, a song called “Courtside” by Punjabi rapper Karan Aujla can be found on the Canada top 200, which is the only South Asian - produced song in the data to be found in a Western country’s chart. This makes sense, as South Asians comprise Canada’s largest minority group at 7.1%, with many tracing their roots to Punjab.\n\n\nCyprus\nCyprus is the number 2 country in both Cluster 13 and 15, for both Turkey and Greece respectively. This makes sense considering the geopolitical conflict between Turkey and Greece that has left a very significant mark on the island country’s history. Modern Cyprus is home to two culturally and linguistically distinct populations, one Greek-speaking and another Turkish-speaking."
  },
  {
    "objectID": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#conclusion",
    "href": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#conclusion",
    "title": "Exploring Musical Ecosystems in Spotify Chart Data",
    "section": "Conclusion",
    "text": "Conclusion\nThe hierarchical clustering approach proved largely successful in outlining specific “ecosystems” within the top 200 Spotify charts of the 73 countries analyzed. The number of clusters one chooses provides specific insights; choosing a high k can outline small clusters highly specific to the region while choosing a lower k can provide a more zoomed-out view of where the songs fit in a larger global context. The choice of k = 32 with Ward’s linkage method created more consistent, evenly-sized clustered that captured both broad regional clusters and more isolated, regionally-specific clusters.\n\nNext Steps\n\nQualitative Analysis: Can a similar analysis be performed if we were given access to song feature data? Spotify once offered this data to the public but has since revoked access for privacy reasons. Might more interesting trends be discovered if we could cross-reference these findings with that data?\nScaling up: This dataset only contained 7399 songs from each countries top 200 data sets, without regard to the songs particular positions on the charts. Further analysis might include simply increasing the number of songs per country or an attempt to weigh chart ranking/number of streams in measuring similarity.\nMeasuring Across Time: How have these patterns shifted over time? Can we notice a change in the “shape” of these clusters if one were to track these weekly charts over the span of years?\n\nThere remains a lot more to learn from analyzing the Spotify chart data than just using the methods described here. It’s likely something that I will revisit in the future.\n\n\n\nHappy Listening!"
  },
  {
    "objectID": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#measuring-chart-uniqueness",
    "href": "Projects/Spotify_Cluster_Project/Spotify_Data_Report.html#measuring-chart-uniqueness",
    "title": "Exploring Musical Ecosystems in Spotify Chart Data",
    "section": "Measuring Chart Uniqueness",
    "text": "Measuring Chart Uniqueness\nOne potential method of measuring the uniqueness of a country’s chart involves looking at the number of other countries the songs on its chart are shared with. If we simply count the number of times that each of the songs appear in the charts of other countries and add the totals for each song together, we can use this number as a broad measurement of “globalization” of a chart.\nWe can use both raw frequency and the average number of shares per songs, which we can call “globality”, as seen in the table below.\n\n\n\n\n\n\nWe can then see which countries have the lowest and highest globality scores:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLimitations\nWhile the globality metric can be a good start for understanding the data, it suffers from significant limitations. Taking the mean of shares per song by itself tells us nothing about the shape of the distribution of the share count of a given country. Therefore, taking a blanket mean via the globality metric for shares per song leads to critical information loss. We have little insight into why these scores are what they are. A country’s chart could have a large bundle of songs that are shared with a very large amount of other countries, yet have another bundle that are completely exclusive to the country at hand.\nFor example, looking at Austria, a country with a high globality score of 12.095, we see:\n\n\n\n\n\n\n\n\n\nA strong plurality of songs in Austria’s chart are shared with only one other country. What might that other country be? Let’s look further:\n\n\n\n\n\n\n\n\n\nGermany holds a significant lead in number of shared songs with Austria. For context, here is the distribution of the number of shared songs with Austria (bin width of 5):\n\n\n\n\n\n\n\n\n\nGiven that a large proportion of countries in the data share less than 75 songs with Austria, Germany’s total of 139 is remarkable.\nNow let’s see if Germany is the country that shares the most songs exclusively with Austria:\n\n\n\n\n\n\nAs seen above, there are 35 songs in the data that are shared only by Germany and Austria. Here they are:\n\n\n\n\n\n\nKnowing that the two countries share a common language and border, as well as many historical ties, this result makes intuitive sense (notice how the majority of the titles above are in German). Yet how many less obvious trends can we uncover in the data? Digging through the data “by hand” in search of these patterns may prove to be a lengthy process. Luckily, unsupervised machine learning methods can help us outline some of the patterns buried within large data sets automatically."
  }
]